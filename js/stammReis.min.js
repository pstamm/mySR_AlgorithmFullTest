var stammReis=function(){function e(e){if(decodeImageResult={},decodeImageResult.markerCode=null,decodeImageResult.markerWhiteBorder=null,decodeImageResult.markerRotation=0,decodeImageResult.success=!1,decodeImageResult.parityOk=!1,decodeImageResult.positionOk=!1,decodeImageResult.message=null,null==e||25!=e.length)return decodeImageResult.message="ERROR: input must be 25 in length!",decodeImageResult;if("0"==e.charAt(0)||"1"==e.charAt(0)){var t="";for(let r=0;r<25;r++)t+="0"==e.charAt(r)?"w":"b";e=t}var n=r(e);if(null==n)return decodeImageResult.message="ERROR: no unique corner color found!",decodeImageResult;decodeImageResult.positionOk=!0,e=n.substring(2);var o="b"==e.charAt(0);decodeImageResult.markerWhiteBorder=!o;var l=n.charAt(0)-"0";l>0&&(decodeImageResult.markerRotation=90*l);var s="";for(let r=1;r<=21;r++)s=c[r]%2==0?("b"==e.charAt(c[r]-1)?1:0)+s:("b"==e.charAt(c[r]-1)?0:1)+s;var u=a(s,o);return decodeImageResult.markerCode=u.code,u.posFailed[0]+u.posFailed[1]+u.posFailed[2]!=0?(decodeImageResult.message="ERROR: Parity error!",decodeImageResult):(decodeImageResult.parityOk=!0,decodeImageResult.success=decodeImageResult.parityOk&&decodeImageResult.positionOk&&null!=decodeImageResult.markerCode,decodeImageResult.success&&(decodeImageResult.message="Ok.",decodeImageResult.markerWhiteBorder||(decodeImageResult.markerCode+=m)),decodeImageResult)}function r(e){for(let a=0;a<4;a++){if(e.charAt(0)!=e.charAt(4)&&e.charAt(4)==e.charAt(20)&&e.charAt(4)==e.charAt(24))return a+" "+e;var r=new char[26],t=e.length;for(let a=1;a<=t;a++)r[u[a]]=e.charAt(a-1);e="";for(let a=1;a<=t;a++)e+=r[a]}return null}function t(e,r){for(var t=1;r>1;)r/=2,t++;var a=0;for(let r=1;r<=e.length;r++){var n=r.toString(2);t<=n.length&&"1"==n.charAt(n.length-t)&&r<=e.length&&"1"==e.charAt(e.length-r)&&(a=1-a)}return a}function a(e,r){var a={};numberAsBinary="",result_parityBits=["","",""],a.posFailed=[0,0,0],a.failedPosition=["","",""];for(let l=0;l<3;l++){var n=e.substring(21-7*(l+1),21-7*l),o=1;for(let e=1;e<=7;e++)e==o?(result_parityBits[l]=n.charAt(n.length-e)+result_parityBits[l],o*=2):numberAsBinary=n.charAt(n.length-e)+numberAsBinary;a.code=parseInt(numberAsBinary,2),r&&(a.code=d-a.code-1),o=1;a.failedPosition=["","",""];for(let e=0;e<5;e++)a.failedPosition[l]=t(n,o)+a.failedPosition[l],o*=2}return a}function n(){function r(r){alert("Marker number bits (without border bits):\n"+r+"\n\nDecode result:\n"+JSON.stringify(e(r)))}r("0010111000010100111111001"),r("1101000111101011000000110")}function o(r){var t=l(r),a="",n="";if(t.success){for(let e=1;e<6;e++)for(let r=1;r<6;r++)a+=t.markerArray[e][r];n="\n\nMARKER ARRAY DECODE TEST:\nBits to decode (marker without border): "+a+"\nDecode result:\n"+JSON.stringify(e(a))}alert("MARKER ARRAY CREATION\n"+JSON.stringify(t)+n)}function l(e){var r=e<m,t={success:!1,markerNumber:e,whiteBorder:r,markerArray:[],message:null};if(isNaN(e)||e<0||e>=2*m)return t.message="Invalid marker number (must be an integer from 0 to "+(2*m-1)+")",t;e=+e,e>=m&&(e-=m);var a=r?"0":"1",n=[a,a,a,a,a,a,a],o=e.toString(2);o.length<12&&(o="0".repeat(12-o.length)+o);var l="",u="",c="";for(let e=0;e<3;e++){let r=o.slice(12-4*(e+1),12-4*e),t="",a=1,n=1;for(let e=1;e<=7;e++)e==n?(t="0"+t,n*=2):(t=r.charAt(4-a)+t,a++);l=t+l,n=1,a=1;for(let e=1;e<=7;e++)if(e==n){let e=s(t,n);u=e+u,c=e+c,n*=2}else{let e=r.charAt(4-a);u=e+u,a++}}let d=0;numBit=1;let g=5;t.markerArray.push(n);for(let e=1;e<=g;e++){var h=[a];for(let t=1;t<=g;t++){d++;let a="",n=!1;1!=t&&t!=g||1!=e&&e!=g?(n=d%2==1,a=u.charAt(u.length-i[numBit-1]),"1"==a&&(n=!n),numBit++):n=1!=t||1!=e,r?h.push(n?"1":"0"):h.push(n?"0":"1")}h.push(a),t.markerArray.push(h)}return t.markerArray.push(n),t.success=!0,t.message="0: white, 1 black",t}function s(e,r){let t=1;for(;r>1;)r/=2,t++;let a=0;for(let r=1;r<=e.length;r++){let n=r.toString(2);t<=n.length&&"1"==n.charAt(n.length-t)&&r<=e.length&&"1"==e.charAt(e.length-r)&&(a=1-a)}return a}const u=[0,21,16,11,6,1,22,17,12,7,2,23,18,13,8,3,24,19,14,9,4,25,20,15,10,5],c=[0,13,17,9,20,24,6,2,14,18,7,10,22,11,3,12,19,8,15,23,16,4],i=[7,14,21,6,10,17,3,11,13,15,1,8,18,20,2,9,16,4,12,19,5],d=4096,m=4096;return{decodeImage:function(r){return e(r)},markerGenerateBlackAndWhiteArrayForNumber:function(e){return l(e)},markerCreationAndDecodingFullTest:function(e){return o(e)},srDecodeImageExample:function(){return n()}}};